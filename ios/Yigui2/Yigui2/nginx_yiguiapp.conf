server {
    listen 80;
    server_name yiguiapp.xyz www.yiguiapp.xyz;

    # 将所有 HTTP 强制跳转到 HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name yiguiapp.xyz www.yiguiapp.xyz;

    ssl_certificate /etc/letsencrypt/live/yiguiapp.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yiguiapp.xyz/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    client_max_body_size 10M;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;

    # 验证用的静态目录（建议保留）
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/certbot;
    }

    # 头像文件静态服务
    location ^~ /avatars/ {
        alias /var/www/avatars/;
        add_header Access-Control-Allow-Origin "*";
        expires 1d;
    }

    # 设计文件静态服务
    location /designs/ {
        alias /root/design-server/generated_designs/;
        location ~* \.glb$ {
            add_header Content-Type "model/gltf-binary";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
        }
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # 模型文件静态服务
    location /models/ {
        alias /root/model-server/generated_models/;
        location ~* \.glb$ {
            add_header Content-Type "model/gltf-binary";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
        }
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # 设计服务（FastAPI 8002）- 放在前面，优先级更高
    location /api/v1/design/ {
        proxy_pass http://127.0.0.1:8002/api/v1/design/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 用户服务（FastAPI 8001）
    location /api/ {
        proxy_pass http://127.0.0.1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 模型生成服务（FastAPI 8000）- 特定路径
    location /generate {
        proxy_pass http://127.0.0.1:8000/generate;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 默认根路径
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 